apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-monitoring-config
  namespace: openshift-monitoring
data:
  config.yaml: |
    prometheusOperator:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    prometheusK8s:
      walCompression: false
      retention: 7d
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "prometheus"
                    operator: In
                    values:
                    - k8s
              topologyKey: "kubernetes.io/hostname"
      resources:
        # limits:
        #   memory: 48Gi
        #   cpu: 2000m
        requests:
          memory: 400Mi
          cpu: 200m
      volumeClaimTemplate:
        metadata:
          name: prometheus-k8s
        spec:
          storageClassName: org-nfs-storage
          resources:
            requests:
              storage: 100Gi
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    alertmanagerMain:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "alertmanager"
                    operator: In
                    values:
                    - main
              topologyKey: "kubernetes.io/hostname"
    kubeStateMetrics:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    grafana:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    telemeterClient:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    k8sPrometheusAdapter:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    thanosQuerier:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 5m
          memory: 12Mi
    openshiftStateMetrics:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
